#!/usr/bin/python# -*- coding: UTF-8 -*-#从源程序的结果html文件获得afterqc结果的对应图片import osimport sysimport getopt import reimport operator import subprocessfrom pdf2image import convert_from_pathimport tempfile#检测文件是否存在的模块from pathlib import Pathfrom time import sleepfrom PIL import Image from selenium import webdriver  from selenium.webdriver.common.keys import Keys  ###############################################################################python3.6 get_afterqcResult.py -p /home/chuhong/Downloads/first_project/test -t /home/chuhong/Downloads/AfterQC-master/QC/out.R1.fastq#python3.6 get_afterqcResult.py -p /home/liyunfan/my_project/test -t /home/liyunfan/my_project/R1.fq.htmlclass getAfterqcResult: 	def __init__(self,png_path,html,layout): 		#参数赋值 		self.png_path = png_path 		self.html = html 		self.layout = layout 	def get_afterqc_result(self): 		try: 			#设置参数，使得可通过点击事件将图片放到指定的位置 			profile = webdriver.FirefoxProfile() 			profile.set_preference('browser.download.dir',self.png_path) 			profile.set_preference('browser.download.folderList',2) 			profile.set_preference('browser.download.manager.showWhenStarting',False) 			profile.set_preference('browser.helperApps.neverAsk.saveToDisk','image/png') 			#设置参数，使得不用打开浏览器也可执行相应操作 			firefox_options = webdriver.FirefoxOptions() 			firefox_options.add_argument('--headless') 			driver = webdriver.Firefox(firefox_options=firefox_options,firefox_profile=profile) 			sleep(1)  			#"file:///home/chuhong/Downloads/AfterQC-master/QC/out.R1.fastq.html" 			driver.get("file://"+self.html+".html") 			sleep(3)    #等待页面显示 			############################ 			#获取第一张图片 			#跳转到指定的第一张结果的位置 			elem_div = driver.find_element_by_xpath("//li[@class='menu-item']/a[@href='#summary']") 			elem_div2 = elem_div.click() 			#截屏 			driver.save_screenshot('screenshot.png') 			#读取图片 			picture = Image.open(r'screenshot.png') 			######################################## 			#按照指定标准，截取图片 			elem_strs = ['',''] 			if operator.eq(self.layout,"PE"): 				elem_strs = ['filter_stat','error_matrix','overlap_stat','r1_pre_quality','r1_pre_content','r1_pre_gc',\ 					'r1_pre_discontinuity','r1_pre_sb','r1_post_quality','r1_post_content','r1_post_gc','r1_post_discontinuity',\ 					'r1_post_sb','r2_pre_quality','r2_pre_content','r2_pre_gc','r2_pre_discontinuity','r2_pre_sb',\ 					'r2_post_quality','r2_post_content','r2_post_gc','r2_post_discontinuity','r2_post_sb'] 				picture2 = picture.crop((60, 50, 780, 390)) 			elif operator.eq(self.layout,"SE"): 				elem_strs = ['filter_stat','r1_pre_quality','r1_pre_content','r1_pre_gc','r1_pre_discontinuity',\ 							'r1_pre_sb','r1_post_quality','r1_post_content','r1_post_gc','r1_post_discontinuity','r1_post_sb'] 				picture2 = picture.crop((60, 50, 780, 320)) 			else: 				print("Please input the correct layout!\nFor example:'SE' or 'PE'") 				sys.exit() 			 			picture2.save(r'summary-table.png') 			sleep(1) 			#将第一张结果图片移动到指定的文件夹下 			os.popen('mv summary-table.png '+self.png_path).read() 			#删除截屏的图片 			os.popen('rm screenshot.png').read() 			################################### 			print(elem_strs) 			for elem in elem_strs: 				new_strs = "//div[@id='figures']/div[@class='figure-div']/div[@id=\'"+elem+"\']/div[@class='plot-container plotly']/div[@class='svg-container']/div[@class='modebar-container']/div[@class='modebar modebar--hover ease-bg']/div[@class='modebar-group']/a[@data-title='Download plot as a png']"	 				elem_div = driver.find_element_by_xpath(new_strs) 				elem_div.click() 				sleep(1)    #等待页面显示 				f = os.popen('mv '+self.png_path+'/newplot.png '+self.png_path+'/'+elem+'.png').read() 			driver.quit()      #关闭浏览区驱动，退出浏览器 		except: 			print("Error,failure to get the png result of AfterQC.") 			sys.exit() 		return